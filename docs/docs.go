// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://sharkytech.vercel.app/terms",
        "contact": {
            "name": "Lucas",
            "url": "https://sharkytech.vercel.app",
            "email": "nguyenmanh180102@gmail.com"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/services/prices": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin creates a new price entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create a new price",
                "parameters": [
                    {
                        "description": "Price request payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/express_be_model_req.PriceReq"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/admin/services/prices/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin updates an existing price",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update a price",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Price ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Price request payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/express_be_model_req.PriceReq"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin deletes a price entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a price",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Price ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/login": {
            "post": {
                "description": "Login for different roles (admin, customer, delivery_person, accounting)\nExample customer payload:\n` + "`" + `` + "`" + `` + "`" + `\n{\n\"phone\": \"0977683511\",\n\"password\": \"nguyenmanhcong\"\n}\n` + "`" + `` + "`" + `` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/express_be_model_req.LoginRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of orders with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "List orders",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new order with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "parameters": [
                    {
                        "description": "Create Order Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/express_be_model_req.CreateOrderReq"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/orders/nearest": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve the closest delivery person to the provided latitude and longitude",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get the nearest delivery person",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Latitude of the location",
                        "name": "lat",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Longitude of the location",
                        "name": "lon",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter by delivery person's status (default: off_duty)",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/orders/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve detailed information about an order based on its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get order detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the status of an order by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Update order status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New status of the order (picking_up, picked_up, pickup_canceled, return_to_hub, at_hub, out_for_delivery, delivered, returned, delivery_canceled)",
                        "name": "order_status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/prices": {
            "get": {
                "description": "Retrieve all price entries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public"
                ],
                "summary": "Get all prices",
                "responses": {}
            }
        },
        "/refresh-token": {
            "post": {
                "description": "Refresh Access Token using a valid Refresh Token from headers.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh Access Token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The refresh token identifier stored in headers",
                        "name": "refresh_token_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/register": {
            "post": {
                "description": "Register for different roles (admin, accounting, customer, delivery_person) account_type customer (prepaid, postpaid)\nExample customer payload:\n{\n\"phone\": \"0990123456\",\n\"password\": \"wrightdaniel\",\n\"last_name\": \"Wright\",\n\"middle_name\": \"Thomas\",\n\"first_name\": \"Daniel\",\n\"specific_address\": \"789 Tran Hung Dao\",\n\"ward\": \"Duong Dong\",\n\"district\": \"Duong Dong\",\n\"city\": \"Phu Quoc\",\n\"identification_number\": \"321987654\",\n\"gender\": \"male\",\n\"date_of_birth\": \"1994-09-09\",\n\"nationality\": \"Vietnamese\",\n\"place_of_origin\": \"Phu Quoc\",\n\"place_of_residence\": \"Phu Quoc\",\n\"latitude\": 10.2899,\n\"longitude\": 103.9840,\n\"account_type\": \"postpaid\",\n\"role\": \"customer\"\n}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "Register Request Example",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/express_be_model_req.RegisterRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/reset-password": {
            "patch": {
                "description": "Đổi mật khẩu người dùng bằng số điện thoại\nExample reset password payload:\n` + "`" + `` + "`" + `` + "`" + `\n{\n\"confirm_password\": \"strongpassword123\",\n\"new_password\": \"strongpassword321\",\n\"phone\": \"0977683511\",\n}\n` + "`" + `` + "`" + `` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Đổi mật khẩu",
                "parameters": [
                    {
                        "description": "Reset Password Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/express_be_model_req.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search a list of users (customers and delivery persons) with optional filters by status and role, including pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User-information"
                ],
                "summary": "Search paginated users",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number (default is 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page size (default is 10)",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by customer status (e.g., pending, verified, blocked, active, inactive) Filter by delivery_person (e.g., on_duty, off_duty)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by user name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by user phone",
                        "name": "phone",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by user role (e.g., customer, delivery_person)",
                        "name": "role",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of users (customers and delivery persons) with optional filters by status and role, including pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User-information"
                ],
                "summary": "Fetch paginated users",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number (default is 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page size (default is 10)",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by customer status (e.g., pending, verified, blocked, active, inactive) Filter by delivery_person (e.g., on_duty, off_duty)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by user role (e.g., customer, delivery_person)",
                        "name": "role",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Fetch the details of a user based on their ID. The user can be either a customer or a delivery person.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User-information"
                ],
                "summary": "Get user information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UserID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update for different roles (customer, delivery_person) account_type customer (prepaid, postpaid)\nExample user payload:",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User-information"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UserID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Request Example",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/express_be_model_req.UpdateUserReq"
                        }
                    }
                ],
                "responses": {}
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update customer status by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User-information"
                ],
                "summary": "Update customer status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UserID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Trạng thái mới của khách hàng (accept, deny)",
                        "name": "approval_status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "express_be_model_req.CreateOrderReq": {
            "type": "object",
            "required": [
                "declared_code",
                "delivery_notes",
                "dimensions",
                "pick_up_notes",
                "product",
                "quantity",
                "receiver_latitude",
                "receiver_longitude",
                "receiver_name",
                "receiver_phone",
                "sender_id",
                "sender_latitude",
                "sender_longitude",
                "sender_phone",
                "shop_name",
                "weight"
            ],
            "properties": {
                "declared_code": {
                    "type": "number"
                },
                "delivery_notes": {
                    "type": "string"
                },
                "dimensions": {
                    "type": "string"
                },
                "pick_up_notes": {
                    "type": "string"
                },
                "product": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "receiver_city": {
                    "type": "string"
                },
                "receiver_district": {
                    "type": "string"
                },
                "receiver_latitude": {
                    "type": "number"
                },
                "receiver_longitude": {
                    "type": "number"
                },
                "receiver_name": {
                    "type": "string"
                },
                "receiver_phone": {
                    "type": "string"
                },
                "receiver_specific_address": {
                    "type": "string"
                },
                "receiver_ward": {
                    "type": "string"
                },
                "sender_city": {
                    "type": "string"
                },
                "sender_district": {
                    "type": "string"
                },
                "sender_id": {
                    "type": "string"
                },
                "sender_latitude": {
                    "type": "number"
                },
                "sender_longitude": {
                    "type": "number"
                },
                "sender_phone": {
                    "type": "string"
                },
                "sender_specific_address": {
                    "type": "string"
                },
                "sender_ward": {
                    "type": "string"
                },
                "shop_name": {
                    "type": "string"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "express_be_model_req.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "phone"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "express_be_model_req.PriceReq": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "string"
                },
                "base_price": {
                    "type": "number"
                },
                "region": {
                    "type": "string"
                }
            }
        },
        "express_be_model_req.RegisterRequest": {
            "type": "object",
            "required": [
                "password",
                "phone",
                "role"
            ],
            "properties": {
                "account_type": {
                    "description": "2. Field for customer",
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id_card": {
                    "type": "string"
                },
                "identification_number": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "middle_name": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "description": "1. Default field",
                    "type": "string"
                },
                "place_of_origin": {
                    "type": "string"
                },
                "place_of_residence": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "specific_address": {
                    "type": "string"
                },
                "ward": {
                    "type": "string"
                }
            }
        },
        "express_be_model_req.ResetPasswordRequest": {
            "type": "object",
            "required": [
                "confirm_password",
                "new_password",
                "phone"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "express_be_model_req.UpdateUserReq": {
            "type": "object",
            "required": [
                "role"
            ],
            "properties": {
                "account_type": {
                    "description": "2. Field for customer",
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id_card": {
                    "type": "string"
                },
                "identification_number": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "middle_name": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                },
                "place_of_origin": {
                    "type": "string"
                },
                "place_of_residence": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "specific_address": {
                    "type": "string"
                },
                "ward": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "203.145.47.225",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "CMN Express API Documentation",
	Description:      "Welcome to the CMN Express API documentation. This server facilitates seamless integration for managing logistics, tracking, and delivery services efficiently.\nExplore the endpoints to unlock robust features designed to enhance your operational workflow.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
